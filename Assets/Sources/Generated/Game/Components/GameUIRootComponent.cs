//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity uIRootEntity { get { return GetGroup(GameMatcher.UIRoot).GetSingleEntity(); } }
    public UIRootComponent uIRoot { get { return uIRootEntity.uIRoot; } }
    public bool hasUIRoot { get { return uIRootEntity != null; } }

    public GameEntity SetUIRoot(UnityEngine.RectTransform newValue) {
        if (hasUIRoot) {
            throw new Entitas.EntitasException("Could not set UIRoot!\n" + this + " already has an entity with UIRootComponent!",
                "You should check if the context already has a uIRootEntity before setting it or use context.ReplaceUIRoot().");
        }
        var entity = CreateEntity();
        entity.AddUIRoot(newValue);
        return entity;
    }

    public void ReplaceUIRoot(UnityEngine.RectTransform newValue) {
        var entity = uIRootEntity;
        if (entity == null) {
            entity = SetUIRoot(newValue);
        } else {
            entity.ReplaceUIRoot(newValue);
        }
    }

    public void RemoveUIRoot() {
        uIRootEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public UIRootComponent uIRoot { get { return (UIRootComponent)GetComponent(GameComponentsLookup.UIRoot); } }
    public bool hasUIRoot { get { return HasComponent(GameComponentsLookup.UIRoot); } }

    public void AddUIRoot(UnityEngine.RectTransform newValue) {
        var index = GameComponentsLookup.UIRoot;
        var component = CreateComponent<UIRootComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceUIRoot(UnityEngine.RectTransform newValue) {
        var index = GameComponentsLookup.UIRoot;
        var component = CreateComponent<UIRootComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveUIRoot() {
        RemoveComponent(GameComponentsLookup.UIRoot);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherUIRoot;

    public static Entitas.IMatcher<GameEntity> UIRoot {
        get {
            if (_matcherUIRoot == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.UIRoot);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherUIRoot = matcher;
            }

            return _matcherUIRoot;
        }
    }
}
